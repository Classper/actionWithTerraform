# .github/workflows/hello-world.yml
#The name of the workflow, will be displayed on the Github actions page
name: Continuous Deployment
# when to execute it, similar to Azure DevOps trigger keyword
on: [push, pull_request]

# list of jobs to execute
jobs:
  terraform:
    runs-on: ubuntu-latest
    env:
        ARM_CLIENT_ID: ${{ secrets.CLIENTID }}
        ARM_CLIENT_SECRET: ${{ secrets.CLIENTSECRET }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.SUBSCRIPTIONID }}
        ARM_TENANT_ID: ${{ secrets.TENANTID }}
        SOURCE_DIR: ${{ github.workspace }}/simple-network
    steps:
        - name: setEnv
          if: github.ref == 'refs/heads/dev' && github.event_name == 'push'
          run: echo '::set-env name=SOURCE_DIR::${{ github.workspace }}/modules/dev'

        - name: setEnv
          if: github.ref == 'refs/heads/test' && github.event_name == 'push'
          run: echo '::set-env name=SOURCE_DIR::${{ github.workspace }}/modules/test'
 
        - name: setEnv
          if: github.ref == 'refs/heads/prod' && github.event_name == 'push'
          run: echo '::set-env name=SOURCE_DIR::${{ github.workspace }}/modules/prod'

        - name: Checkout
          uses: actions/checkout@v2
    
        - name: Setup Terraform
          uses: hashicorp/setup-terraform@v1.1.0

        - name: Terraform Init $SOURCE_DIR
          run: terraform init $SOURCE_DIR

        - name: Terraform Validate
          id: validate
          run: terraform validate $SOURCE_DIR -no-color

        - name: Terraform Plan
          if: github.event_name == 'pull'
          id: plan
          run: terraform plan $SOURCE_DIR -no-color

        - name: Terraform Apply
          if: github.ref == 'refs/heads/master' && github.event_name == 'push'
          run: terraform apply -auto-approve $SOURCE_DIR
